{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Evento from \"../core/Evento\";\nvar eventosList = [new Evento(1, \"UPF em Dança\", \"2023-11-27\", \"Evento de dança\", \"PREVISTO\"), new Evento(2, \"UPF na feitech\", \"2023-11-27\", \"Evento de tecnologia\", \"PREVISTO\")];\nvar proximoId = eventosList.length + 1;\nexport var fetchEventos = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 500);\n      });\n      return eventosList;\n    } catch (error) {\n      throw new Error('Erro ao buscar eventos');\n    }\n  });\n  return function fetchEventos() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var cadastrarEvento = function () {\n  var _ref2 = _asyncToGenerator(function* (novoEvento) {\n    try {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 500);\n      });\n      novoEvento.id = proximoId++;\n      eventosList.push(novoEvento);\n      return novoEvento;\n    } catch (error) {\n      console.error(\"Erro ao cadastrar evento:\", error);\n      throw error;\n    }\n  });\n  return function cadastrarEvento(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var atualizarEvento = function () {\n  var _ref3 = _asyncToGenerator(function* (eventoAtualizado) {\n    try {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 500);\n      });\n      var index = eventosList.findIndex(function (evento) {\n        return evento.id === eventoAtualizado.id;\n      });\n      if (index !== -1) {\n        eventosList[index] = eventoAtualizado;\n        return eventoAtualizado;\n      } else {\n        throw new Error('Evento não encontrado');\n      }\n    } catch (error) {\n      console.error(\"Erro ao atualizar evento:\", error);\n      throw error;\n    }\n  });\n  return function atualizarEvento(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var excluirEvento = function () {\n  var _ref4 = _asyncToGenerator(function* (id) {\n    try {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 500);\n      });\n      eventosList = eventosList.filter(function (evento) {\n        return evento.id !== id;\n      });\n    } catch (error) {\n      console.error(\"Erro ao excluir evento:\", error);\n      throw error;\n    }\n  });\n  return function excluirEvento(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["Evento","eventosList","proximoId","length","fetchEventos","_ref","_asyncToGenerator","Promise","resolve","setTimeout","error","Error","apply","arguments","cadastrarEvento","_ref2","novoEvento","id","push","console","_x","atualizarEvento","_ref3","eventoAtualizado","index","findIndex","evento","_x2","excluirEvento","_ref4","filter","_x3"],"sources":["C:/Users/junqu/OneDrive/Área de Trabalho/Programas/ProgWebMob2/src/service/eventoService.ts"],"sourcesContent":["import Evento from '../core/Evento';\n\nlet eventosList: Evento[] = [\n  new Evento(1, \"UPF em Dança\",\n    \"2023-11-27\",\n    \"Evento de dança\",\n    \"PREVISTO\",\n  ),\n  new Evento(2, \"UPF na feitech\",\n    \"2023-11-27\",\n    \"Evento de tecnologia\",\n    \"PREVISTO\",\n  )\n]\nlet proximoId = eventosList.length + 1;\n\nexport const fetchEventos = async (): Promise<Evento[]> => {\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    return eventosList;\n  } catch (error) {\n    throw new Error('Erro ao buscar eventos');\n  }\n};\n\nexport const cadastrarEvento = async (novoEvento: Evento): Promise<Evento> => {\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    novoEvento.id = proximoId++;\n    eventosList.push(novoEvento);\n\n    // Retorna o evento cadastrado\n    return novoEvento;\n  } catch (error) {\n    console.error(\"Erro ao cadastrar evento:\", error);\n    throw error;\n  }\n};\n\nexport const atualizarEvento = async (eventoAtualizado: Evento): Promise<Evento> => {\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    const index = eventosList.findIndex((evento) => evento.id === eventoAtualizado.id);\n\n    if (index !== -1) {\n      eventosList[index] = eventoAtualizado;\n      return eventoAtualizado;\n    } else {\n      throw new Error('Evento não encontrado');\n    }\n  } catch (error) {\n    console.error(\"Erro ao atualizar evento:\", error);\n    throw error;\n  }\n};\n\nexport const excluirEvento = async (id: number): Promise<void> => {\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    eventosList = eventosList.filter((evento) => evento.id !== id);\n  } catch (error) {\n    console.error(\"Erro ao excluir evento:\", error);\n    throw error;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}